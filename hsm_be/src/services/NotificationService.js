const Notification = require("../models/Notification");
const Account = require("../models/AccountModel");

class NotificationService {
    // üìå L·∫•y tin nh·∫Øn c·ªßa nh√¢n vi√™n d·ª±a tr√™n c√°c ƒëi·ªÅu ki·ªán l·ªçc
    static async getMessageForEmploy(id, chatroomId, type) {
        if (!id) throw new Error("Missing employeeId");

        // Ki·ªÉm tra t√†i kho·∫£n c√≥ t·ªìn t·∫°i kh√¥ng
        const account = await Account.findById(id);
        if (!account) throw new Error("Account not found");

        // X√¢y d·ª±ng b·ªô l·ªçc ƒë·ªông
        let filter = { account: id };
        if (chatroomId) filter.chatroom = chatroomId;
        if (type) filter.type = type;

        // L·∫•y tin nh·∫Øn + populate th√¥ng tin t√†i kho·∫£n & chatroom
        return await Notification.find(filter)
            .populate("account", "FullName Email")
            .populate("chatroom", "name")
            .sort({ createdAt: -1 });
    }

    // T·∫°o th√¥ng b√°o m·ªõi
    static async createNotification(data) {
        try {
            const notification = new Notification({
                sender: data.sender,
                message: data.message,
                createdAt: data.createdAt || new Date(),
                type: data.type || "booking",
                receiverRole: "Admin"
            });

            const savedNotification = await notification.save();
            return {
                status: "OK",
                data: savedNotification
            };
        } catch (error) {
            console.error("L·ªói khi t·∫°o th√¥ng b√°o:", error);
            throw error;
        }
    }
   
    static async getAllMess() {
        return await Notification.find()
            .sort({ createdAt: -1 });
    }
}

module.exports = NotificationService;
